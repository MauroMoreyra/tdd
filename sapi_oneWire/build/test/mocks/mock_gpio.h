/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_GPIO_H
#define _MOCK_GPIO_H

#include "gpio.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_gpio_Init(void);
void mock_gpio_Destroy(void);
void mock_gpio_Verify(void);




#define gpioInit_IgnoreAndReturn(cmock_retval) gpioInit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpioInit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define gpioInit_ExpectAndReturn(gpio, config, cmock_retval) gpioInit_CMockExpectAndReturn(__LINE__, gpio, config, cmock_retval)
void gpioInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpioMap_t gpio, gpioInit_t config, bool_t cmock_to_return);
typedef bool_t (* CMOCK_gpioInit_CALLBACK)(gpioMap_t gpio, gpioInit_t config, int cmock_num_calls);
void gpioInit_StubWithCallback(CMOCK_gpioInit_CALLBACK Callback);
#define gpioWrite_IgnoreAndReturn(cmock_retval) gpioWrite_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpioWrite_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define gpioWrite_ExpectAndReturn(gpio, value, cmock_retval) gpioWrite_CMockExpectAndReturn(__LINE__, gpio, value, cmock_retval)
void gpioWrite_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpioMap_t gpio, bool_t value, bool_t cmock_to_return);
typedef bool_t (* CMOCK_gpioWrite_CALLBACK)(gpioMap_t gpio, bool_t value, int cmock_num_calls);
void gpioWrite_StubWithCallback(CMOCK_gpioWrite_CALLBACK Callback);
#define gpioRead_IgnoreAndReturn(cmock_retval) gpioRead_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void gpioRead_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define gpioRead_ExpectAndReturn(gpio, cmock_retval) gpioRead_CMockExpectAndReturn(__LINE__, gpio, cmock_retval)
void gpioRead_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpioMap_t gpio, bool_t cmock_to_return);
typedef bool_t (* CMOCK_gpioRead_CALLBACK)(gpioMap_t gpio, int cmock_num_calls);
void gpioRead_StubWithCallback(CMOCK_gpioRead_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
